{"version":3,"sources":["Components/Cart/Checkout/style.module.css","Components/Cart/Cart/style.module.css","Components/Meals/AvailableMeals/style.module.css","Components/Cart/CartItem/style.module.css","Components/Layout/HeaderCartButton/style.module.css","Components/Meals/MealItem/style.module.css","Components/UI/Modal/style.module.css","Components/Layout/Header/style.module.css","Components/Meals/MealsSummary/style.module.css","Components/UI/Card/style.module.css","Components/Meals/MealItemForm/style.module.css","Components/UI/Input/style.module.css","assets/meals.jpeg","Components/Cart/CartIcon.js","store/cart-context.js","Components/Layout/HeaderCartButton/index.js","Components/Layout/Header/index.js","Components/Meals/MealsSummary/index.js","Components/UI/Card/index.js","Components/UI/Input/index.js","Components/Meals/MealItemForm/index.js","Components/Meals/MealItem/index.js","Components/Meals/AvailableMeals/index.js","Components/Meals/Meal/index.js","Components/UI/Modal/index.js","Components/Cart/CartItem/index.js","Components/Cart/Checkout/index.js","Components/Cart/Cart/index.js","store/CartProvider.js","App.js","index.js"],"names":["module","exports","CartIcon","xmlns","viewBox","fill","d","CartContext","React","createContext","items","totalAmount","addItem","item","removeItem","id","clearCart","HeaderCartButton","props","cartCtx","useContext","useState","isItemAdded","setIsItemAdded","useEffect","length","timer","setTimeout","clearTimeout","btnClasses","classes","button","bump","cartItemAmount","reduce","currValue","amount","className","onClick","onOpen","icon","badge","Header","header","src","mealImage","alt","MealsSummary","summary","Card","card","children","Input","forwardRef","ref","input","htmlFor","label","MealItemForm","isAmountvalid","setIsAmountValid","inputRef","useRef","form","onSubmit","e","preventDefault","enteredAmount","current","value","enteredAmountInt","trim","onAddToCart","type","min","max","step","defaultValue","MealItem","meal","name","description","price","toFixed","AvaiableMeals","meals","setMeals","isLoading","setIsLoading","isError","setIsError","fetchData","a","fetch","res","ok","Error","json","key","data","loadedItems","push","catch","error","message","loading","MealList","map","Meal","AvailableMeals","Backdrop","backdrop","onClose","ModalContent","modal","content","Modal","overlay","document","querySelector","ReactDom","createPortal","CartItem","actions","onRemove","onAdd","isEmpty","val","Checkout","street","postalCode","city","formValidity","setFormValidity","nameInputRef","cityInputRef","postalInputRef","streetInputRef","nameControlClasses","control","invalid","cityControlClasses","streetControlClasses","postalCodeControlClasses","event","enteredName","enteredCity","enteredPostal","enteredStreet","isNamevalid","isCityvalid","isPostalCodevalid","isStreetvalid","onConfirm","submit","Cart","isCheckout","setIsCheckout","isSubmitting","setIsSubmitting","didSubmit","setDidSubmit","cartAmountTotal","isItemsAdded","addEventHandler","removeEventHandler","submitHandler","userData","method","body","JSON","stringify","users","orders","cartItems","bind","buttonState","Fragment","total","defaultCart","cartReducer","state","action","updatedItems","updatedItem","updatedTotalAmount","existingCartIndex","findIndex","existingCartItem","concat","updateItem","filter","CartProvider","useReducer","cartState","dispatchCartAction","cartData","Provider","App","isCartShown","setIsCartShown","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.e157e70a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"style_form__1U9wU\",\"control\":\"style_control__3fG4P\",\"actions\":\"style_actions__1o04O\",\"submit\":\"style_submit__2SZa1\",\"invalid\":\"style_invalid__2NN1q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart-items\":\"style_cart-items__1Q2ot\",\"total\":\"style_total__1VwhE\",\"actions\":\"style_actions__j3fUv\",\"button--alt\":\"style_button--alt__1TIBF\",\"button\":\"style_button__2nfeU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"meals\":\"style_meals__3Gw5Q\",\"meals-appear\":\"style_meals-appear__1WjJ2\",\"loading\":\"style_loading__2sjjz\",\"error\":\"style_error__1Xa4j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart-item\":\"style_cart-item__W4qcv\",\"summary\":\"style_summary__3YOrk\",\"price\":\"style_price__39Viz\",\"amount\":\"style_amount__2XH-d\",\"actions\":\"style_actions__Q2nvs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"style_button__2KW93\",\"icon\":\"style_icon__ItHLV\",\"badge\":\"style_badge__1e6Bh\",\"bump\":\"style_bump__3eTTO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"meal\":\"style_meal__3SzkQ\",\"description\":\"style_description__pDsSp\",\"price\":\"style_price__2tz-Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"style_backdrop__3TOqo\",\"modal\":\"style_modal__1DMbq\",\"slide-down\":\"style_slide-down__39inM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"style_header__1VOqC\",\"main-image\":\"style_main-image__3JzV1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"summary\":\"style_summary__2qVh6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"style_card__ruHYI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"style_form__2Re5k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"style_input__3kTIg\"};","export default __webpack_public_path__ + \"static/media/meals.2971f633.jpeg\";","const CartIcon = () => {\n  return (\n    <svg\n      xmlns='http://www.w3.org/2000/svg'\n      viewBox='0 0 20 20'\n      fill='currentColor'\n    >\n      <path d='M3 1a1 1 0 000 2h1.22l.305 1.222a.997.997 0 00.01.042l1.358 5.43-.893.892C3.74 11.846 4.632 14 6.414 14H15a1 1 0 000-2H6.414l1-1H14a1 1 0 00.894-.553l3-6A1 1 0 0017 3H6.28l-.31-1.243A1 1 0 005 1H3zM16 16.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zM6.5 18a1.5 1.5 0 100-3 1.5 1.5 0 000 3z' />\n    </svg>\n  );\n};\n\nexport default CartIcon;","import React from 'react';\n\n// variables and method states to be declared \nconst CartContext = React.createContext({\n  items: [],\n  totalAmount: 0,\n  addItem: (item)=>{},\n  removeItem: (id)=> {},\n  clearCart: ()=>{}\n});\n\nexport default CartContext;","import CartIcon from '../../Cart/CartIcon';\nimport classes from './style.module.css';\nimport { useContext, useState, useEffect } from 'react';\nimport CartContext from '../../../store/cart-context';\n\nconst HeaderCartButton = (props) => {\n  const cartCtx = useContext(CartContext);\n\n  const [isItemAdded, setIsItemAdded] = useState(false);\n\n  //destructering the items of Cart state\n\n  const { items } = cartCtx;\n\n  // used useEffect to play animation in the header Cart button each time an item get added\n\n  useEffect(()=>{\n    if(items.length === 0 ){\n      return;\n    }\n    setIsItemAdded(true);\n    \n    //reverting class state after 3ms\n\n    const timer = setTimeout(()=>{setIsItemAdded(false);},300);\n    return () => {\n\n      // removing timer\n\n      clearTimeout(timer);\n    };\n  },[items]);\n\n  // conditional addition of bump class for animation addition\n\n  const btnClasses = `${classes.button} ${isItemAdded ? classes.bump: ''}`\n\n  // Addition amount for each item in Cart, taking 0 as starting value\n  const cartItemAmount = items.reduce((currValue,item) => { return currValue + item.amount },0);\n  return (\n    <button className={btnClasses} onClick={props.onOpen}>\n      <span className={classes.icon}>\n        <CartIcon/>\n      </span>\n      <span>Your Cart</span>\n      <span className={classes.badge}>{cartItemAmount}</span>\n    </button>\n  );\n}\n\nexport default HeaderCartButton;","import { Fragment } from 'react';\nimport mealImage from \"../../../assets/meals.jpeg\";\nimport classes from \"./style.module.css\";\nimport HeaderCartButton from \"../HeaderCartButton/index\";\n\nconst Header = (props) => {\nreturn (\n  <Fragment>\n      {/* Main header Element */}\n    <header className={classes.header}>\n      <h1>Chinese Food</h1>\n      <HeaderCartButton onOpen={props.onOpen}/>\n    </header>\n\n    {/* Section showing Image attached to header */}\n    <div className={classes['main-image']}>\n      <img src={mealImage} alt=\"A Table full of delicious food\"/>\n    </div>\n  </Fragment>\n);\n}\n\nexport default Header;","import classes from './style.module.css';\n\n// Some dummy theory\nconst MealsSummary = () => {\n  return (\n    <section className={classes.summary}>\n      <h2>Delicious Food, Delivered To You</h2>\n      <p>\n        Choose your favorite meal from our broad selection of available meals\n        and enjoy a delicious lunch or dinner at home.\n      </p>\n      <p>\n        All our meals are cooked with high-quality ingredients, just-in-time and\n        of course by experienced chefs!\n      </p>\n    </section>\n  );\n};\n\nexport default MealsSummary;","import classes from \"./style.module.css\";\n\n// Common card block to be reused\nconst Card = (props) => {\n  return (\n    <div className={classes.card}>\n      {props.children}\n    </div>\n  );\n}\n\nexport default Card;","import React from 'react';\nimport classes from \"./style.module.css\";\n\n// Input element to input value in the form added in the page\nconst Input = React.forwardRef((props,ref) => {\n  return (\n    <div className={classes.input}>\n      <label htmlFor={props.input.id}>{props.label}</label>\n      <input ref={ref} {...props.input}/>\n    </div>\n  );\n});\n\nexport default Input;","import classes from './style.module.css';\nimport Input from '../../UI/Input';\nimport { useState, useRef } from 'react';\n\nconst MealItemForm = (props) => {\n\n  // state to show an error message to handle if amount is less than 5 and more than 1 to enable the feature of adding 5 items at a time\n  const [isAmountvalid, setIsAmountValid] = useState(true);\n  const inputRef = useRef();\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    const enteredAmount = inputRef.current.value;\n    const enteredAmountInt = +enteredAmount;\n    if(enteredAmount.trim().length === 0 || enteredAmountInt < 1 || enteredAmountInt > 5){\n      setIsAmountValid(false);\n      return;\n    }\n    setIsAmountValid(true);\n    props.onAddToCart(enteredAmountInt);\n  }\nreturn (\n  <form className={classes.form} onSubmit={submitHandler}>\n    <Input ref={inputRef} label=\"Amount\" input ={{\n     id: \"amount\"+props.id,\n     type: \"number\",\n     min: \"1\",\n     max: \"5\",\n     step: \"1\",\n     defaultValue: \"1\"\n    }} />\n    <button>+ Add</button>\n    {!isAmountvalid && <p>Please enter a valid number(1-5)</p>}\n  </form>\n);\n}\n\nexport default MealItemForm;","import { useContext } from 'react';\nimport classes from './style.module.css';\nimport MealItemForm from '../MealItemForm/index';\nimport CartContext from '../../../store/cart-context';\n\n// Individual Meal Item shown in the Page on load\nconst MealItem = props => {\n  const cartCtx = useContext(CartContext);\n\n  // defining function for Adding item to Cart which will be passed as prop to MealItemForm \n  const addToCartHandler = (amount)=>{\n     cartCtx.addItem( {\n       id:props.id,\n       name: props.name,\n       price:props.price,\n       amount: amount,\n     });\n  }\n  return (\n    <li className={classes.meal}>\n      <div>\n        <h3>{props.name}</h3>\n        <div className={classes.description}>{props.description}</div>\n        <div className={classes.price}>${props.price.toFixed(2)}</div>\n      </div>\n      <MealItemForm id={props.name} onAddToCart={addToCartHandler}/>\n    </li>\n  );\n}\n\nexport default MealItem;","import { useEffect, useState } from 'react';\nimport classes from './style.module.css';\nimport Card from \"../../UI/Card/index\";\nimport MealItem from '../MealItem';\n\n// Showing Meals List available in the page\n\nconst AvaiableMeals = () => {\n\n  // maintaining meals state\n\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isError, setIsError] = useState(null);\n\n\n  // fetching menu dynamically by http request to server\n\n  useEffect(()=>{\n    const fetchData = async () => {\n      const res = await fetch('https://react-http-request-proje-bdcd3-default-rtdb.firebaseio.com/Meals.json');\n\n      //checking error\n      if(!res.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const data = await res.json();\n      const loadedItems = [];\n      for(let key in data){\n        loadedItems.push({\n          id:key,\n          name:data[key].name,\n          description: data[key].description,\n          price: data[key].price\n        })\n      }\n      setIsLoading(false);\n      setIsError(false);\n      setMeals(loadedItems);\n    }\n      fetchData().catch((error)=> {\n        setIsLoading(false);\n        setIsError(error.message);\n      });\n  },[]);\n\n  // Loading state returned jSX\n\n  if(isLoading){\n    return (\n      <section className={classes.meals}>\n        <p className={classes.loading}>Loading...</p>\n      </section>\n    );\n  }\n\n    // error state returned JSX\n    if(isError){\n      return (\n        <section className={classes.meals}>\n          <p className={classes.error}>{isError}</p>\n        </section>\n      );\n    }\n  \n  // Looping thorugh each item of Menu to show on the Page\n\n  const MealList = meals.map(meal => <MealItem id={meal.id} key={meal.id} name={meal.name} description={meal.description} price={meal.price}/>)\nreturn (\n  <section className={classes.meals}>\n    <Card>\n      <ul>\n        {MealList}\n      </ul>\n    </Card>\n  </section>\n);\n}\n\nexport default AvaiableMeals;","import { Fragment } from 'react';\nimport MealsSummary from \"../MealsSummary/index\";\nimport AvailableMeals from '../AvailableMeals/index';\n\n// Meal Section containing all the sections shown in the page on load related to Meal \nconst Meal = () => {\nreturn (\n  <Fragment>\n    <MealsSummary/>\n    <AvailableMeals/>\n  </Fragment>\n);\n}\n\nexport default Meal;","import { Fragment } from \"react\";\nimport ReactDom from 'react-dom';\nimport classes from './style.module.css';\n\n// Black overlay\nconst Backdrop = (props) => {\n  return <div className={classes.backdrop} onClick={props.onClose}></div>;\n}\n\n// Showing primary content of Modal on click of Header Cart Button\n\nconst ModalContent = props => {\n  return (<div className={classes.modal}>\n      <div className={classes.content}>{props.children}</div>\n  </div>);\n}\n\n// Overall element to be rendered on click of Header Cart Button\nconst Modal = props => {\n  const overlay = document.querySelector(\"#overlay\");\nreturn (\n  <Fragment>\n    {ReactDom.createPortal(<Backdrop onClose={props.onClose}/>,overlay)}\n    {ReactDom.createPortal(<ModalContent>{props.children}</ModalContent>,overlay)}\n  </Fragment>\n);\n}\n\nexport default Modal;","import classes from './style.module.css';\n\nconst CartItem = (props) => {\n  const price = `$${props.price.toFixed(2)}`;\n\n  // each item of the list rendered in the Cart List\n  \n  return (\n    <li className={classes['cart-item']}>\n      <div>\n        <h2>{props.name}</h2>\n        <div className={classes.summary}>\n          <span className={classes.price}>{price}</span>\n          <span className={classes.amount}>x {props.amount}</span>\n        </div>\n      </div>\n      <div className={classes.actions}>\n        <button onClick={props.onRemove}>−</button>\n        <button onClick={props.onAdd}>+</button>\n      </div>\n    </li>\n  );\n};\n\nexport default CartItem;\n","import React,{ useRef, useState } from 'react';\nimport classes from \"./style.module.css\";\n\n// form validation\nconst isEmpty = val => val.trim() === '';\n// postal code should have 6 digits long \nconst isEnoughLong = val => val.trim().length === 6;\n\nconst Checkout = (props) => {\n\n    // Form validity state ( true initially ) \n    const [formValidity, setFormValidity] = useState({\n      name: true,\n      street:true,\n      postalCode: true,\n      city:true\n    });\n\n\n    // getting values of input using reference\n    const nameInputRef = useRef();\n    const cityInputRef = useRef();\n    const postalInputRef = useRef();\n    const streetInputRef = useRef();\n\n    // Checkout form submit handler\n    const submitHandler = (event) => {\n      event.preventDefault();\n\n      // accessing values using reference hook (useRef)\n      const enteredName = nameInputRef.current.value;\n      const enteredCity = cityInputRef.current.value;\n      const enteredPostal = postalInputRef.current.value;\n      const enteredStreet = streetInputRef.current.value;\n\n      // checking validity of each input\n      const isNamevalid = !isEmpty(enteredName);\n      const isCityvalid = !isEmpty(enteredCity);\n      const isPostalCodevalid = isEnoughLong(enteredPostal);\n      const isStreetvalid = !isEmpty(enteredStreet);\n      \n      // setting form validity according to each value of input \n      setFormValidity({\n        name : isNamevalid,\n        street : isStreetvalid,\n        postalCode : isPostalCodevalid,\n        city :  isCityvalid\n      });\n\n      const formValid = isNamevalid && isCityvalid && isPostalCodevalid && isStreetvalid;\n\n\n      if(!formValid){\n        return;\n      }\n      \n      props.onConfirm({\n        name: enteredName,\n        street: enteredStreet,\n        postalCode: enteredPostal,\n        city: enteredCity\n      })\n      return;\n    };\n\n    // Adding invalid classes in the input fields\n    const nameControlClasses = `${classes.control} ${\n      formValidity.name ? '' : classes.invalid\n      }`;\n    const cityControlClasses = `${classes.control} ${\n        formValidity.city ? '' : classes.invalid\n      }`;\n    const streetControlClasses = `${classes.control} ${\n        formValidity.street ? '' : classes.invalid\n      }`;\n    const postalCodeControlClasses = `${classes.control} ${\n        formValidity.postalCode ? '' : classes.invalid\n      }`;\n\n    return (\n    <form onSubmit={submitHandler} className={classes.form}>\n      <div className={nameControlClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input type=\"text\" id=\"name\" ref={nameInputRef}/>\n        {!formValidity.name && <p>Please Enter Proper Name</p>}\n      </div>\n      <div className={cityControlClasses}>\n        <label htmlFor=\"city\">Your City</label>\n        <input type=\"text\" id=\"city\" ref={cityInputRef}/>\n        {!formValidity.city && <p>Please Enter Proper City Name</p>}\n      </div>\n      <div className={postalCodeControlClasses}>\n        <label htmlFor=\"code\">Postal Code</label>\n        <input type=\"text\" id=\"code\" ref={postalInputRef}/>\n        {!formValidity.postalCode && <p>Please Enter Proper Postal Code</p>}\n      </div>\n      <div className={streetControlClasses}>\n        <label htmlFor=\"street\">Street</label>\n        <input type=\"text\" id=\"street\" ref={streetInputRef}/>\n        {!formValidity.street && <p>Please Enter Proper Street Name</p>}\n      </div>\n      <div className={classes.actions}>\n        <button type=\"button\" onClick={props.onClose}>Close</button>\n        <button className={classes.submit}>Checkout</button>\n      </div>\n    </form>\n    );\n}\n\nexport default Checkout;","import React,{ useContext, useState } from 'react';\nimport classes from './style.module.css';\nimport Modal from '../../UI/Modal/index';\nimport CartContext from '../../../store/cart-context';\nimport CartItem from '../CartItem/index';\nimport Checkout from '../Checkout/index';\n\n// Cart Modal to be shown when header button gets clicked\n\nconst Cart = props => {\n  // Managing checkout state\n  const [isCheckout,setIsCheckout] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [isError,setIsError] = useState(false);\n  const [didSubmit,setDidSubmit] = useState(false);\n\n  // Accessing Cart Context Values stored globally\n  const cartCtx = useContext(CartContext);\n\n  // showing amount only upto 2 digit precision\n  const cartAmountTotal = `$${cartCtx.totalAmount.toFixed(2)}`;\n\n  // A variable to check if there is anything present in Cart or not ( for optional rendering of Order button)\n  const isItemsAdded = cartCtx.items.length > 0;\n\n  // Adding item to the Cart ( Calling addItem method stored globally )\n  const addEventHandler = (item) => {\n   cartCtx.addItem({...item,amount:1});\n  }\n\n  // Removing item from Cart ( Calling removeItem method stored globally )\n  const removeEventHandler = (id) => {\n    cartCtx.removeItem(id);\n  }\n\n  // checkout handler \n  const checkoutHandler = () => {\n    setIsCheckout(true);\n  }\n\n  // Cart submit handler function ( sending data to firebase server using POST http request)\n  const submitHandler = async(userData) => {\n    setIsSubmitting(true);\n    const res = await fetch('https://react-http-request-proje-bdcd3-default-rtdb.firebaseio.com/orders.json',{\n      method: 'POST',\n      body: JSON.stringify({\n        users: userData,\n        orders:cartCtx.items\n      })\n    });\n    if(!res.ok){\n      setIsError(true);\n      setIsSubmitting(false);\n      return;\n    }\n    setIsSubmitting(false);\n    setDidSubmit(true);\n    cartCtx.clearCart();\n  }\n\n// Rendering items stored in Cart globally (accessing using useContext hook ) in an unordered list \n const cartItems = <ul className={classes['cart-items']}>{cartCtx.items.map(item => <CartItem key={item.id} name={item.name} price={item.price} amount={item.amount} onAdd={addEventHandler.bind(null,item)} onRemove={removeEventHandler.bind(null,item.id)}/>)}</ul>\n\n // Conditional rendering of Order button \n const buttonState = (<div className={classes.actions}>\n <button className={classes['button--alt']} onClick={props.onClose}>Close</button>\n {isItemsAdded && <button className={classes.button} onClick={checkoutHandler}>Order</button>}\n</div>);\n\n  return (\n    <Modal onClose={props.onClose}>\n     {!isSubmitting && !didSubmit && !isError && <React.Fragment>\n        {cartItems}\n        <div className={classes.total}>\n          <span>Total Amount\n          </span>\n          <span>{cartAmountTotal}\n          </span>\n        </div>\n        {isCheckout ? <Checkout onConfirm = {submitHandler} onClose={props.onClose}/> : buttonState}\n      </React.Fragment>}\n      {isSubmitting && !isError && <p>Your order is in progress! Please wait...</p>}\n      {!isSubmitting && !didSubmit && isError && <p>Something went wrong...</p>}\n      {!isSubmitting && !isError && didSubmit && \n        <React.Fragment>\n          <p>Hurrah!..Your Order has been placed.</p>\n          <button className={classes['button--alt']} onClick={props.onClose}>Close</button>\n        </React.Fragment>\n      }\n    </Modal>\n  );\n}\n\nexport default Cart;","import { useReducer } from 'react';\nimport CartContext from './cart-context';\n\n// default Cart state\n\nconst defaultCart = {\n  items: [],\n  totalAmount: 0\n}\n\n// Cartreducer function which handles addition, deletion and returning default value of Cart\n\nconst cartReducer = (state,action) => {\n\n  // logic for adding an item in cart\n\n  if(action.type === 'ADD'){\n\n    // updating total amount shown (total sum)\n    const updatedTotalAmount = state.totalAmount + action.item.price*action.item.amount;\n\n    // logic to check if item already exists in cart\n\n    let updatedItems;\n    const existingCartIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.items[existingCartIndex];\n    let updatedItem;\n\n    //changes made for the item which is already present in the Cart\n\n    if(existingCartItem){\n      updatedItem = {\n        ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartIndex] = updatedItem;\n    }\n\n    // simple concatenation for adding a new item\n\n    else{\n      updatedItems = state.items.concat(action.item);\n    }\n\n    // updating the Cart state value accordingly\n\n    return {\n    items: updatedItems,\n    totalAmount: updatedTotalAmount\n    }\n  }\n\n  // Logic to reduce item stored in the Cart\n\n  if(action.type === 'REDUCE'){\n\n    // finding the item and reducing total sum by price of 1 unit of item\n\n    const existingCartIndex = state.items.findIndex(item => item.id === action.id);\n    const existingCartItem = state.items[existingCartIndex];\n    const updatedTotalAmount = state.totalAmount - existingCartItem.price;\n    let updatedItems;\n\n    // checking if added amount of item is greater than 1, then we'll just reduce amount by 1\n\n    if(existingCartItem.amount>1){\n       let updateItem = {\n         ...existingCartItem,\n         amount:  existingCartItem.amount - 1\n       };\n       updatedItems = [...state.items];\n       updatedItems[existingCartIndex]=updateItem;\n    }\n\n    // if only 1 amount of item is present, we'll delete item entry from Cart \n    else{\n        updatedItems = state.items.filter(item => item.id !== action.id);\n    }\n\n    // updating the Cart values accordingly\n\n     return {\n       items: updatedItems,\n       totalAmount: updatedTotalAmount\n     };\n  }\n\n  // default case when there is no addition or deletion in Cart\n  return defaultCart;\n}\n\nconst CartProvider = (props) => {\n\n  // useReducer hook to get access of states stored via cartState and dispatching any action of addition or deletion via dispatchcartAction method call\n  \n  const [cartState, dispatchCartAction] = useReducer(cartReducer,defaultCart);\n  const addItemHandler = (item) => {\n    dispatchCartAction({type:'ADD',item:item})\n  }\n\n  const removeItemHandler = (id) => {\n    dispatchCartAction({type: 'REDUCE',id:id});\n  }\n\n  const clearItemsHandler = () => {\n    dispatchCartAction({type:'CLEAR'});\n  } \n  const cartData = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemHandler,\n    removeItem: removeItemHandler,\n    clearCart: clearItemsHandler\n  }\n\n  // wrapping elements in Provider to get globally access of stored data into its children elements\nreturn (\n  <CartContext.Provider value={cartData}>\n   {props.children}\n  </CartContext.Provider>\n);\n}\n\nexport default CartProvider;","import { useState } from \"react\";\nimport Header from \"./Components/Layout/Header/index\";\nimport Meal from \"./Components/Meals/Meal/index\";\nimport Cart from \"./Components/Cart/Cart/index\";\nimport CartProvider from \"./store/CartProvider\";\n\nfunction App() {\n  // handling state of Cart shown as a Modal \n  const [isCartShown, setIsCartShown] = useState(false);\n\n  const closeCart = () => {\n    setIsCartShown(false);\n  }\n\n  const openCart = () => {\n    setIsCartShown(true);\n  }\n\n  return (\n    <CartProvider>\n      {isCartShown && <Cart onClose={closeCart}/>}\n\n      {/* passing openCart method as a prop to be accessed in HeaderCartButton component */}\n      <Header onOpen={openCart}/>\n      <main>\n        <Meal/>\n      </main>\n    </CartProvider>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}